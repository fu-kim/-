<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxPay.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>